%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 21.05.0 (http://poppler.freedesktop.org)
%%Creator: Matplotlib v3.3.3, https://matplotlib.org
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 944 650
%%HiResBoundingBox: 0 0 943.814063 649.675
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font T3_14_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-1021 -463 1794 1233] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 33 dict def
CharProcs begin
/B {
686 0 98 0 615 729 setcachedevice
q
197 348 m
197 81 l
355 81 l
408 81 447 92 473 114 c
498 136 511 169 511 215 c
511 260 498 293 473 315 c
447 337 408 348 355 348 c
197 348 l
197 648 m
197 428 l
343 428 l
391 428 426 437 450 455 c
474 473 486 500 486 538 c
486 574 474 602 450 620 c
426 638 391 648 343 648 c
197 648 l
98 729 m
350 729 l
425 729 483 713 524 682 c
564 650 585 606 585 549 c
585 504 574 468 553 442 c
532 416 502 399 462 393 c
510 382 548 360 575 327 c
601 294 615 253 615 204 c
615 138 592 88 548 53 c
504 17 441 0 360 0 c
98 0 l
98 729 l
f
Q
} def
/C {
698 0 56 -13 644 742 setcachedevice
q
644 673 m
644 569 l
610 599 575 622 537 638 c
499 653 460 661 418 661 c
334 661 270 635 226 584 c
182 533 160 460 160 364 c
160 268 182 194 226 143 c
270 92 334 67 418 67 c
460 67 499 74 537 90 c
575 105 610 128 644 159 c
644 56 l
609 32 572 15 534 4 c
496 -7 455 -13 412 -13 c
302 -13 215 20 151 87 c
87 154 56 246 56 364 c
56 481 87 573 151 641 c
215 708 302 742 412 742 c
456 742 497 736 535 725 c
573 713 610 696 644 673 c
f
Q
} def
/E {
632 0 98 0 568 729 setcachedevice
q
98 729 m
559 729 l
559 646 l
197 646 l
197 430 l
544 430 l
544 347 l
197 347 l
197 83 l
568 83 l
568 0 l
98 0 l
98 729 l
f
Q
} def
/G {
775 0 56 -13 693 742 setcachedevice
q
595 104 m
595 300 l
434 300 l
434 381 l
693 381 l
693 68 l
655 40 613 20 567 7 c
521 -6 472 -13 420 -13 c
306 -13 216 20 152 86 c
88 152 56 245 56 364 c
56 482 88 575 152 642 c
216 708 306 742 420 742 c
467 742 512 736 555 724 c
598 712 638 695 674 673 c
674 568 l
637 598 598 621 557 637 c
516 653 473 661 428 661 c
338 661 271 636 227 586 c
182 536 160 462 160 364 c
160 265 182 191 227 141 c
271 91 338 67 428 67 c
462 67 493 70 521 76 c
549 82 573 91 595 104 c
f
Q
} def
/H {
752 0 98 0 654 729 setcachedevice
q
98 729 m
197 729 l
197 430 l
555 430 l
555 729 l
654 729 l
654 0 l
555 0 l
555 347 l
197 347 l
197 0 l
98 0 l
98 729 l
f
Q
} def
/M {
863 0 98 0 765 729 setcachedevice
q
98 729 m
245 729 l
431 233 l
618 729 l
765 729 l
765 0 l
669 0 l
669 640 l
481 140 l
382 140 l
194 640 l
194 0 l
98 0 l
98 729 l
f
Q
} def
/O {
787 0 56 -13 731 742 setcachedevice
q
394 662 m
322 662 265 635 223 582 c
181 528 160 456 160 364 c
160 272 181 199 223 146 c
265 92 322 66 394 66 c
465 66 522 92 564 146 c
606 199 627 272 627 364 c
627 456 606 528 564 582 c
522 635 465 662 394 662 c
394 742 m
496 742 577 707 639 639 c
700 571 731 479 731 364 c
731 248 700 157 639 89 c
577 21 496 -13 394 -13 c
291 -13 209 21 148 89 c
86 157 56 248 56 364 c
56 479 86 571 148 639 c
209 707 291 742 394 742 c
f
Q
} def
/R {
695 0 98 0 666 729 setcachedevice
q
444 342 m
465 334 486 319 506 296 c
526 272 546 240 566 199 c
666 0 l
560 0 l
467 187 l
443 235 419 268 397 284 c
374 300 343 308 304 308 c
197 308 l
197 0 l
98 0 l
98 729 l
321 729 l
404 729 466 711 507 677 c
548 642 569 589 569 519 c
569 473 558 434 537 404 c
515 374 484 353 444 342 c
197 648 m
197 389 l
321 389 l
368 389 404 400 428 422 c
452 444 465 476 465 519 c
465 561 452 593 428 615 c
404 637 368 648 321 648 c
197 648 l
f
Q
} def
/W {
989 0 33 0 956 729 setcachedevice
q
33 729 m
133 729 l
286 113 l
439 729 l
550 729 l
703 113 l
856 729 l
956 729 l
773 0 l
649 0 l
495 633 l
340 0 l
216 0 l
33 729 l
f
Q
} def
/Y {
611 0 -1 0 613 729 setcachedevice
q
-1 729 m
104 729 l
306 429 l
507 729 l
613 729 l
355 347 l
355 0 l
256 0 l
256 347 l
-1 729 l
f
Q
} def
/a {
613 0 60 -13 522 560 setcachedevice
q
343 275 m
270 275 220 266 192 250 c
164 233 150 205 150 165 c
150 133 160 107 181 89 c
202 70 231 61 267 61 c
317 61 357 78 387 114 c
417 149 432 196 432 255 c
432 275 l
343 275 l
522 312 m
522 0 l
432 0 l
432 83 l
411 49 385 25 355 10 c
325 -5 287 -13 243 -13 c
187 -13 142 2 109 33 c
76 64 60 106 60 159 c
60 220 80 266 122 298 c
163 329 224 345 306 345 c
432 345 l
432 354 l
432 395 418 427 391 450 c
364 472 326 484 277 484 c
245 484 215 480 185 472 c
155 464 127 453 100 439 c
100 522 l
132 534 164 544 195 550 c
226 556 256 560 286 560 c
365 560 424 539 463 498 c
502 457 522 395 522 312 c
f
Q
} def
/c {
550 0 55 -13 488 560 setcachedevice
q
488 526 m
488 442 l
462 456 437 466 411 473 c
385 480 360 484 334 484 c
276 484 230 465 198 428 c
166 391 150 339 150 273 c
150 206 166 154 198 117 c
230 80 276 62 334 62 c
360 62 385 65 411 72 c
437 79 462 90 488 104 c
488 21 l
462 9 436 0 410 -5 c
383 -10 354 -13 324 -13 c
242 -13 176 12 128 64 c
79 115 55 185 55 273 c
55 362 79 432 128 483 c
177 534 244 560 330 560 c
358 560 385 557 411 551 c
437 545 463 537 488 526 c
f
Q
} def
/d {
635 0 55 -13 544 760 setcachedevice
q
454 464 m
454 760 l
544 760 l
544 0 l
454 0 l
454 82 l
435 49 411 25 382 10 c
353 -5 319 -13 279 -13 c
213 -13 159 13 117 65 c
75 117 55 187 55 273 c
55 359 75 428 117 481 c
159 533 213 560 279 560 c
319 560 353 552 382 536 c
411 520 435 496 454 464 c
148 273 m
148 207 161 155 188 117 c
215 79 253 61 301 61 c
348 61 385 79 413 117 c
440 155 454 207 454 273 c
454 339 440 390 413 428 c
385 466 348 485 301 485 c
253 485 215 466 188 428 c
161 390 148 339 148 273 c
f
Q
} def
/e {
615 0 55 -13 562 560 setcachedevice
q
562 296 m
562 252 l
149 252 l
153 190 171 142 205 110 c
238 78 284 62 344 62 c
378 62 412 66 444 74 c
476 82 509 95 541 113 c
541 28 l
509 14 476 3 442 -3 c
408 -9 373 -13 339 -13 c
251 -13 182 12 131 62 c
80 112 55 181 55 268 c
55 357 79 428 127 481 c
175 533 241 560 323 560 c
397 560 455 536 498 489 c
540 441 562 377 562 296 c
472 322 m
471 371 457 410 431 440 c
404 469 368 484 324 484 c
274 484 234 469 204 441 c
174 413 156 373 152 322 c
472 322 l
f
Q
} def
/eight {
636 0 68 -13 568 742 setcachedevice
q
318 346 m
271 346 234 333 207 308 c
180 283 167 249 167 205 c
167 161 180 126 207 101 c
234 76 271 64 318 64 c
364 64 401 76 428 102 c
455 127 469 161 469 205 c
469 249 455 283 429 308 c
402 333 365 346 318 346 c
219 388 m
177 398 144 418 120 447 c
96 476 85 511 85 553 c
85 611 105 657 147 691 c
188 725 245 742 318 742 c
390 742 447 725 489 691 c
530 657 551 611 551 553 c
551 511 539 476 515 447 c
491 418 459 398 417 388 c
464 377 501 355 528 323 c
554 291 568 251 568 205 c
568 134 546 80 503 43 c
459 5 398 -13 318 -13 c
237 -13 175 5 132 43 c
89 80 68 134 68 205 c
68 251 81 291 108 323 c
134 355 171 377 219 388 c
183 544 m
183 506 194 476 218 455 c
242 434 275 424 318 424 c
360 424 393 434 417 455 c
441 476 453 506 453 544 c
453 582 441 611 417 632 c
393 653 360 664 318 664 c
275 664 242 653 218 632 c
194 611 183 582 183 544 c
f
Q
} def
/five {
636 0 77 -13 549 729 setcachedevice
q
108 729 m
495 729 l
495 646 l
198 646 l
198 467 l
212 472 227 476 241 478 c
255 480 270 482 284 482 c
365 482 429 459 477 415 c
525 370 549 310 549 234 c
549 155 524 94 475 51 c
426 8 357 -13 269 -13 c
238 -13 207 -10 175 -6 c
143 -1 111 6 77 17 c
77 116 l
106 100 136 88 168 80 c
199 72 232 69 267 69 c
323 69 368 83 401 113 c
433 143 450 183 450 234 c
450 284 433 324 401 354 c
368 384 323 399 267 399 c
241 399 214 396 188 390 c
162 384 135 375 108 363 c
108 729 l
f
Q
} def
/four {
636 0 49 0 580 729 setcachedevice
q
378 643 m
129 254 l
378 254 l
378 643 l
352 729 m
476 729 l
476 254 l
580 254 l
580 172 l
476 172 l
476 0 l
378 0 l
378 172 l
49 172 l
49 267 l
352 729 l
f
Q
} def
/g {
635 0 55 -207 544 560 setcachedevice
q
454 280 m
454 344 440 395 414 431 c
387 467 349 485 301 485 c
253 485 215 467 188 431 c
161 395 148 344 148 280 c
148 215 161 165 188 129 c
215 93 253 75 301 75 c
349 75 387 93 414 129 c
440 165 454 215 454 280 c
544 68 m
544 -24 523 -93 482 -139 c
440 -184 377 -207 292 -207 c
260 -207 231 -204 203 -200 c
175 -195 147 -188 121 -178 c
121 -91 l
147 -105 173 -115 199 -122 c
225 -129 251 -133 278 -133 c
336 -133 380 -117 410 -87 c
439 -56 454 -10 454 52 c
454 96 l
435 64 411 40 382 24 c
353 8 319 0 279 0 c
211 0 157 25 116 76 c
75 127 55 195 55 280 c
55 364 75 432 116 483 c
157 534 211 560 279 560 c
319 560 353 552 382 536 c
411 520 435 496 454 464 c
454 547 l
544 547 l
544 68 l
f
Q
} def
/i {
278 0 94 0 184 760 setcachedevice
q
94 547 m
184 547 l
184 0 l
94 0 l
94 547 l
94 760 m
184 760 l
184 646 l
94 646 l
94 760 l
f
Q
} def
/l {
278 0 94 0 184 760 setcachedevice
q
94 0 90 760 re
f
Q
} def
/m {
974 0 91 0 889 560 setcachedevice
q
520 442 m
542 482 569 511 600 531 c
631 550 668 560 711 560 c
767 560 811 540 842 500 c
873 460 889 403 889 330 c
889 0 l
799 0 l
799 327 l
799 379 789 418 771 444 c
752 469 724 482 686 482 c
639 482 602 466 575 435 c
548 404 535 362 535 309 c
535 0 l
445 0 l
445 327 l
445 379 435 418 417 444 c
398 469 369 482 331 482 c
285 482 248 466 221 435 c
194 404 181 362 181 309 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
201 495 226 520 255 536 c
283 552 317 560 357 560 c
397 560 430 550 458 530 c
486 510 506 480 520 442 c
f
Q
} def
/n {
634 0 91 0 549 560 setcachedevice
q
549 330 m
549 0 l
459 0 l
459 327 l
459 379 448 417 428 443 c
408 469 378 482 338 482 c
289 482 251 466 223 435 c
195 404 181 362 181 309 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
202 494 227 519 257 535 c
286 551 320 560 358 560 c
420 560 468 540 500 501 c
532 462 549 405 549 330 c
f
Q
} def
/o {
612 0 55 -13 557 560 setcachedevice
q
306 484 m
258 484 220 465 192 427 c
164 389 150 338 150 273 c
150 207 163 156 191 118 c
219 80 257 62 306 62 c
354 62 392 80 420 118 c
448 156 462 207 462 273 c
462 337 448 389 420 427 c
392 465 354 484 306 484 c
306 560 m
384 560 445 534 490 484 c
534 433 557 363 557 273 c
557 183 534 113 490 63 c
445 12 384 -13 306 -13 c
227 -13 165 12 121 63 c
77 113 55 183 55 273 c
55 363 77 433 121 484 c
165 534 227 560 306 560 c
f
Q
} def
/one {
636 0 110 0 544 729 setcachedevice
q
124 83 m
285 83 l
285 639 l
110 604 l
110 694 l
284 729 l
383 729 l
383 83 l
544 83 l
544 0 l
124 0 l
124 83 l
f
Q
} def
/r {
411 0 91 0 411 560 setcachedevice
q
411 463 m
401 469 390 473 378 476 c
366 478 353 480 339 480 c
288 480 249 463 222 430 c
194 397 181 350 181 288 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
199 495 224 520 254 536 c
284 552 321 560 365 560 c
371 560 378 559 386 559 c
393 558 401 557 411 555 c
411 463 l
f
Q
} def
/s {
521 0 54 -13 472 560 setcachedevice
q
443 531 m
443 446 l
417 458 391 468 364 475 c
336 481 308 485 279 485 c
234 485 200 478 178 464 c
156 450 145 430 145 403 c
145 382 153 366 169 354 c
185 342 217 330 265 320 c
296 313 l
360 299 405 279 432 255 c
458 230 472 195 472 151 c
472 100 452 60 412 31 c
372 1 316 -13 246 -13 c
216 -13 186 -10 154 -5 c
122 0 89 8 54 20 c
54 113 l
87 95 120 82 152 74 c
184 65 216 61 248 61 c
290 61 323 68 346 82 c
368 96 380 117 380 144 c
380 168 371 187 355 200 c
339 213 303 226 247 238 c
216 245 l
160 257 119 275 95 299 c
70 323 58 356 58 399 c
58 450 76 490 112 518 c
148 546 200 560 268 560 c
301 560 332 557 362 552 c
391 547 418 540 443 531 c
f
Q
} def
/six {
636 0 70 -13 573 742 setcachedevice
q
330 404 m
286 404 251 388 225 358 c
199 328 186 286 186 234 c
186 181 199 139 225 109 c
251 79 286 64 330 64 c
374 64 409 79 435 109 c
461 139 474 181 474 234 c
474 286 461 328 435 358 c
409 388 374 404 330 404 c
526 713 m
526 623 l
501 635 476 644 451 650 c
425 656 400 659 376 659 c
310 659 260 637 226 593 c
192 549 172 482 168 394 c
187 422 211 444 240 459 c
269 474 301 482 336 482 c
409 482 467 459 509 415 c
551 371 573 310 573 234 c
573 159 550 99 506 54 c
462 9 403 -13 330 -13 c
246 -13 181 19 137 83 c
92 147 70 241 70 364 c
70 479 97 571 152 639 c
206 707 280 742 372 742 c
396 742 421 739 447 735 c
472 730 498 723 526 713 c
f
Q
} def
/space {
318 0 0 0 0 0 setcachedevice
q
Q
} def
/t {
392 0 27 0 368 702 setcachedevice
q
183 702 m
183 547 l
368 547 l
368 477 l
183 477 l
183 180 l
183 135 189 106 201 94 c
213 81 238 75 276 75 c
368 75 l
368 0 l
276 0 l
206 0 158 13 132 39 c
106 65 93 112 93 180 c
93 477 l
27 477 l
27 547 l
93 547 l
93 702 l
183 702 l
f
Q
} def
/three {
636 0 76 -13 556 742 setcachedevice
q
406 393 m
453 383 490 362 516 330 c
542 298 556 258 556 212 c
556 140 531 84 482 45 c
432 6 362 -13 271 -13 c
240 -13 208 -10 176 -4 c
144 1 110 10 76 22 c
76 117 l
103 101 133 89 166 81 c
198 73 232 69 268 69 c
330 69 377 81 409 105 c
441 129 458 165 458 212 c
458 254 443 288 413 312 c
383 336 341 349 287 349 c
202 349 l
202 430 l
291 430 l
339 430 376 439 402 459 c
428 478 441 506 441 543 c
441 580 427 609 401 629 c
374 649 336 659 287 659 c
260 659 231 656 200 650 c
169 644 135 635 98 623 c
98 711 l
135 721 170 729 203 734 c
235 739 266 742 296 742 c
370 742 429 725 473 691 c
517 657 539 611 539 553 c
539 513 527 479 504 451 c
481 423 448 403 406 393 c
f
Q
} def
/two {
636 0 73 0 536 742 setcachedevice
q
192 83 m
536 83 l
536 0 l
73 0 l
73 83 l
110 121 161 173 226 239 c
290 304 331 346 348 365 c
380 400 402 430 414 455 c
426 479 433 504 433 528 c
433 566 419 598 392 622 c
365 646 330 659 286 659 c
255 659 222 653 188 643 c
154 632 117 616 78 594 c
78 694 l
118 710 155 722 189 730 c
223 738 255 742 284 742 c
359 742 419 723 464 685 c
509 647 532 597 532 534 c
532 504 526 475 515 449 c
504 422 484 390 454 354 c
446 344 420 317 376 272 c
332 227 271 164 192 83 c
f
Q
} def
/u {
634 0 85 -13 543 560 setcachedevice
q
85 216 m
85 547 l
175 547 l
175 219 l
175 167 185 129 205 103 c
225 77 255 64 296 64 c
344 64 383 79 411 110 c
439 141 453 183 453 237 c
453 547 l
543 547 l
543 0 l
453 0 l
453 84 l
431 50 405 26 377 10 c
348 -5 315 -13 277 -13 c
214 -13 166 6 134 45 c
101 83 85 140 85 216 c
311 560 m
311 560 l
f
Q
} def
/zero {
636 0 66 -13 570 742 setcachedevice
q
318 664 m
267 664 229 639 203 589 c
177 539 165 464 165 364 c
165 264 177 189 203 139 c
229 89 267 64 318 64 c
369 64 407 89 433 139 c
458 189 471 264 471 364 c
471 464 458 539 433 589 c
407 639 369 664 318 664 c
318 742 m
399 742 461 709 505 645 c
548 580 570 486 570 364 c
570 241 548 147 505 83 c
461 19 399 -13 318 -13 c
236 -13 173 19 130 83 c
87 147 66 241 66 364 c
66 486 87 580 130 645 c
173 709 236 742 318 742 c
f
Q
} def
end
currentdict end
/T3_14_0 exch definefont pop
%%EndResource
/F14_0 /T3_14_0 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 943.814063 649.675 re
W
q
1 j
/DeviceGray {} cs
[1] sc
0 j
0 w
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
0 0 943.814062 649.675 re
f
/DeviceGray {} CS
[0] SC
85.29375 52.075 837 554.4 re
f
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
85.29375 52.075 m
85.29375 48.575 l
f
85.29375 52.075 m
85.29375 48.575 l
S
1 w
q
[1 0 0 1 64.692187 33.684375] cm
[1 0 0 1 0 0] Tm
0 0 Td
12.568359 0 Td
/F14_0 15 Tf
(100)
[9.54
0
9.54
0
9.54
0] Tj
q
[0.015 0 0 0.015 0 0] cm
q
[1 0 0 1 0 0] cm
-1021 -463 2815 1696 re
W
106 272 626 83 re
f
Q
Q
Q
0.8 w
204.865179 52.075 m
204.865179 48.575 l
f
204.865179 52.075 m
204.865179 48.575 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
200.091741 33.684375 Td
/F14_0 15 Tf
(0)
[9.54
0] Tj
0.8 w
324.436607 52.075 m
324.436607 48.575 l
f
324.436607 52.075 m
324.436607 48.575 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
310.116295 33.684375 Td
/F14_0 15 Tf
(100)
[9.54
0
9.54
0
9.54
0] Tj
0.8 w
444.008036 52.075 m
444.008036 48.575 l
f
444.008036 52.075 m
444.008036 48.575 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
429.687723 33.684375 Td
/F14_0 15 Tf
(200)
[9.54
0
9.54
0
9.54
0] Tj
0.8 w
563.579464 52.075 m
563.579464 48.575 l
f
563.579464 52.075 m
563.579464 48.575 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
549.259152 33.684375 Td
/F14_0 15 Tf
(300)
[9.54
0
9.54
0
9.54
0] Tj
0.8 w
683.150893 52.075 m
683.150893 48.575 l
f
683.150893 52.075 m
683.150893 48.575 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
668.83058 33.684375 Td
/F14_0 15 Tf
(400)
[9.54
0
9.54
0
9.54
0] Tj
0.8 w
802.722321 52.075 m
802.722321 48.575 l
f
802.722321 52.075 m
802.722321 48.575 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
788.402009 33.684375 Td
/F14_0 15 Tf
(500)
[9.54
0
9.54
0
9.54
0] Tj
0.8 w
922.29375 52.075 m
922.29375 48.575 l
f
922.29375 52.075 m
922.29375 48.575 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
907.973438 33.684375 Td
/F14_0 15 Tf
(600)
[9.54
0
9.54
0
9.54
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
443.160938 11.35625 Td
/F14_0 20 Tf
(Milliseconds)
[17.26
0
5.56
0
5.56
0
5.56
0
5.56
0
10.42
0
12.3
0
11
0
12.24
0
12.68
0
12.7
0
10.42
0] Tj
0.8 w
85.29375 52.075 m
81.79375 52.075 l
f
85.29375 52.075 m
81.79375 52.075 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
68.746875 46.379687 Td
/F14_0 15 Tf
(0)
[9.54
0] Tj
0.8 w
85.29375 162.955 m
81.79375 162.955 l
f
85.29375 162.955 m
81.79375 162.955 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
40.10625 157.259687 Td
/F14_0 15 Tf
(2000)
[9.54
0
9.54
0
9.54
0
9.54
0] Tj
0.8 w
85.29375 273.835 m
81.79375 273.835 l
f
85.29375 273.835 m
81.79375 273.835 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
40.10625 268.139688 Td
/F14_0 15 Tf
(4000)
[9.54
0
9.54
0
9.54
0
9.54
0] Tj
0.8 w
85.29375 384.715 m
81.79375 384.715 l
f
85.29375 384.715 m
81.79375 384.715 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
40.10625 379.019688 Td
/F14_0 15 Tf
(6000)
[9.54
0
9.54
0
9.54
0
9.54
0] Tj
0.8 w
85.29375 495.595 m
81.79375 495.595 l
f
85.29375 495.595 m
81.79375 495.595 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
40.10625 489.899688 Td
/F14_0 15 Tf
(8000)
[9.54
0
9.54
0
9.54
0
9.54
0] Tj
0.8 w
85.29375 606.475 m
81.79375 606.475 l
f
85.29375 606.475 m
81.79375 606.475 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
30.559375 600.779688 Td
/F14_0 15 Tf
(10000)
[9.54
0
9.54
0
9.54
0
9.54
0
9.54
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 22.403125 266.923437] Tm
0 0 Td
0 0 Td
/F14_0 20 Tf
(Occurrences)
[15.74
0
11
0
11
0
12.68
0
8.22
0
8.22
0
12.3
0
12.68
0
11
0
12.3
0
10.42
0] Tj
q
85.29375 52.075 837 554.4 re
W
0.75 w
/DeviceRGB {} cs
[0 0 0] sc
300.522321 52.075 m
300.522321 589.0114 l
S
319.65375 52.075 m
319.65375 455.01292 l
S
290.956607 52.075 m
290.956607 334.43092 l
S
301.718036 52.075 m
301.718036 328.83148 l
S
299.326607 52.075 m
299.326607 295.06852 l
S
281.390893 52.075 m
281.390893 280.87588 l
S
348.350893 52.075 m
348.350893 271.8946 l
S
298.130893 52.075 m
298.130893 258.3118 l
S
329.219464 52.075 m
329.219464 253.98748 l
S
338.785179 52.075 m
338.785179 251.1046 l
S
310.088036 52.075 m
310.088036 250.77196 l
S
280.195179 52.075 m
280.195179 229.15036 l
S
289.760893 52.075 m
289.760893 228.15244 l
S
318.458036 52.075 m
318.458036 219.06028 l
S
302.91375 52.075 m
302.91375 212.90644 l
S
288.565179 52.075 m
288.565179 203.7034 l
S
312.479464 52.075 m
312.479464 203.09356 l
S
357.916607 52.075 m
357.916607 195.16564 l
S
306.500893 52.075 m
306.500893 194.833 l
S
324.436607 52.075 m
324.436607 159.96124 l
S
278.999464 52.075 m
278.999464 159.73948 l
S
347.155179 52.075 m
347.155179 159.24052 l
S
337.589464 52.075 m
337.589464 158.2426 l
S
331.610893 52.075 m
331.610893 155.30428 l
S
330.415179 52.075 m
330.415179 154.74988 l
S
313.675179 52.075 m
313.675179 154.14004 l
S
328.02375 52.075 m
328.02375 152.53228 l
S
325.632321 52.075 m
325.632321 151.867 l
S
276.608036 52.075 m
276.608036 148.48516 l
S
304.109464 52.075 m
304.109464 147.59812 l
S
377.048036 52.075 m
377.048036 146.10124 l
S
308.892321 52.075 m
308.892321 142.7194 l
S
367.482321 52.075 m
367.482321 139.28212 l
S
307.696607 52.075 m
307.696607 137.34172 l
S
336.39375 52.075 m
336.39375 137.28628 l
S
349.546607 52.075 m
349.546607 136.67644 l
S
287.369464 52.075 m
287.369464 136.621 l
S
294.54375 52.075 m
294.54375 136.45468 l
S
271.825179 52.075 m
271.825179 135.06868 l
S
317.262321 52.075 m
317.262321 133.35004 l
S
305.305179 52.075 m
305.305179 133.2946 l
S
286.17375 52.075 m
286.17375 129.63556 l
S
292.152321 52.075 m
292.152321 129.46924 l
S
295.739464 52.075 m
295.739464 126.42004 l
S
311.28375 52.075 m
311.28375 125.69932 l
S
296.935179 52.075 m
296.935179 124.64596 l
S
335.198036 52.075 m
335.198036 123.20452 l
S
293.348036 52.075 m
293.348036 123.20452 l
S
332.806607 52.075 m
332.806607 121.26412 l
S
343.568036 52.075 m
343.568036 118.38124 l
S
323.240893 52.075 m
323.240893 117.66052 l
S
320.849464 52.075 m
320.849464 117.05068 l
S
345.959464 52.075 m
345.959464 116.60716 l
S
282.586607 52.075 m
282.586607 114.22324 l
S
277.80375 52.075 m
277.80375 113.44708 l
S
344.76375 52.075 m
344.76375 112.2274 l
S
316.066607 52.075 m
316.066607 109.95436 l
S
284.978036 52.075 m
284.978036 108.29116 l
S
261.06375 52.075 m
261.06375 107.73676 l
S
396.179464 52.075 m
396.179464 105.51916 l
S
356.720893 52.075 m
356.720893 104.90932 l
S
256.280893 52.075 m
256.280893 104.07772 l
S
262.259464 52.075 m
262.259464 103.52332 l
S
350.742321 52.075 m
350.742321 103.46788 l
S
334.002321 52.075 m
334.002321 103.13524 l
S
342.372321 52.075 m
342.372321 103.0798 l
S
270.629464 52.075 m
270.629464 102.35908 l
S
354.329464 52.075 m
354.329464 100.585 l
S
339.980893 52.075 m
339.980893 100.36324 l
S
326.828036 52.075 m
326.828036 98.70004 l
S
264.650893 52.075 m
264.650893 98.14564 l
S
274.216607 52.075 m
274.216607 96.427 l
S
386.61375 52.075 m
386.61375 96.03892 l
S
322.045179 52.075 m
322.045179 95.42908 l
S
275.412321 52.075 m
275.412321 95.3182 l
S
355.525179 52.075 m
355.525179 93.9322 l
S
255.085179 52.075 m
255.085179 93.15604 l
S
366.286607 52.075 m
366.286607 93.15604 l
S
351.938036 52.075 m
351.938036 92.15812 l
S
375.852321 52.075 m
375.852321 90.99388 l
S
283.782321 52.075 m
283.782321 90.82756 l
S
373.460893 52.075 m
373.460893 89.66332 l
S
273.020893 52.075 m
273.020893 89.2198 l
S
265.846607 52.075 m
265.846607 88.05556 l
S
314.870893 52.075 m
314.870893 87.0022 l
S
360.308036 52.075 m
360.308036 85.0618 l
S
341.176607 52.075 m
341.176607 84.84004 l
S
394.98375 52.075 m
394.98375 84.2302 l
S
372.265179 52.075 m
372.265179 83.01052 l
S
263.455179 52.075 m
263.455179 82.95508 l
S
361.50375 52.075 m
361.50375 82.45612 l
S
371.069464 52.075 m
371.069464 81.01468 l
S
391.396607 52.075 m
391.396607 80.18308 l
S
359.112321 52.075 m
359.112321 79.85044 l
S
353.13375 52.075 m
353.13375 79.68412 l
S
385.418036 52.075 m
385.418036 79.40692 l
S
267.042321 52.075 m
267.042321 78.79708 l
S
269.43375 52.075 m
269.43375 78.409 l
S
393.788036 52.075 m
393.788036 77.74372 l
S
415.310893 52.075 m
415.310893 76.7458 l
S
378.24375 52.075 m
378.24375 76.57948 l
S
257.476607 52.075 m
257.476607 76.30228 l
S
268.238036 52.075 m
268.238036 75.13804 l
S
374.656607 52.075 m
374.656607 75.02716 l
S
365.090893 52.075 m
365.090893 74.86084 l
S
369.87375 52.075 m
369.87375 73.91836 l
S
363.895179 52.075 m
363.895179 73.80748 l
S
379.439464 52.075 m
379.439464 73.64116 l
S
253.889464 52.075 m
253.889464 72.75412 l
S
252.69375 52.075 m
252.69375 72.3106 l
S
397.375179 52.075 m
397.375179 71.36812 l
S
405.745179 52.075 m
405.745179 70.59196 l
S
392.592321 52.075 m
392.592321 70.3702 l
S
389.005179 52.075 m
389.005179 70.3702 l
S
259.868036 52.075 m
259.868036 70.14844 l
S
384.222321 52.075 m
384.222321 70.093 l
S
383.026607 52.075 m
383.026607 68.92876 l
S
390.200893 52.075 m
390.200893 68.09716 l
S
368.678036 52.075 m
368.678036 67.09924 l
S
362.699464 52.075 m
362.699464 66.82204 l
S
258.672321 52.075 m
258.672321 65.3806 l
S
387.809464 52.075 m
387.809464 64.93708 l
S
381.830893 52.075 m
381.830893 63.49564 l
S
403.35375 52.075 m
403.35375 63.10756 l
S
380.635179 52.075 m
380.635179 62.66404 l
S
424.876607 52.075 m
424.876607 62.6086 l
S
414.115179 52.075 m
414.115179 62.44228 l
S
398.570893 52.075 m
398.570893 62.27596 l
S
402.158036 52.075 m
402.158036 61.99876 l
S
400.962321 52.075 m
400.962321 61.66612 l
S
404.549464 52.075 m
404.549464 61.61068 l
S
251.498036 52.075 m
251.498036 61.05628 l
S
434.442321 52.075 m
434.442321 61.00084 l
S
408.136607 52.075 m
408.136607 60.72364 l
S
409.332321 52.075 m
409.332321 60.6682 l
S
241.932321 52.075 m
241.932321 60.44644 l
S
399.766607 52.075 m
399.766607 60.05836 l
S
406.940893 52.075 m
406.940893 59.89204 l
S
412.919464 52.075 m
412.919464 59.44852 l
S
444.008036 52.075 m
444.008036 59.33764 l
S
208.452321 52.075 m
208.452321 59.11588 l
S
421.289464 52.075 m
421.289464 58.56148 l
S
209.648036 52.075 m
209.648036 58.39516 l
S
420.09375 52.075 m
420.09375 58.00708 l
S
410.528036 52.075 m
410.528036 58.00708 l
S
250.302321 52.075 m
250.302321 57.45268 l
S
433.246607 52.075 m
433.246607 57.28636 l
S
243.128036 52.075 m
243.128036 57.23092 l
S
416.506607 52.075 m
416.506607 57.0646 l
S
418.898036 52.075 m
418.898036 57.00916 l
S
432.050893 52.075 m
432.050893 56.84284 l
S
207.256607 52.075 m
207.256607 56.73196 l
S
439.225179 52.075 m
439.225179 56.73196 l
S
417.702321 52.075 m
417.702321 56.67652 l
S
440.420893 52.075 m
440.420893 56.67652 l
S
441.616607 52.075 m
441.616607 56.56564 l
S
210.84375 52.075 m
210.84375 56.56564 l
S
426.072321 52.075 m
426.072321 56.5102 l
S
438.029464 52.075 m
438.029464 56.5102 l
S
423.680893 52.075 m
423.680893 56.39932 l
S
442.812321 52.075 m
442.812321 56.39932 l
S
249.106607 52.075 m
249.106607 56.39932 l
S
428.46375 52.075 m
428.46375 56.233 l
S
430.855179 52.075 m
430.855179 56.17756 l
S
206.060893 52.075 m
206.060893 56.12212 l
S
246.715179 52.075 m
246.715179 56.06668 l
S
427.268036 52.075 m
427.268036 56.01124 l
S
422.485179 52.075 m
422.485179 55.9558 l
S
429.659464 52.075 m
429.659464 55.78948 l
S
453.57375 52.075 m
453.57375 55.78948 l
S
436.83375 52.075 m
436.83375 55.73404 l
S
247.910893 52.075 m
247.910893 55.73404 l
S
447.595179 52.075 m
447.595179 55.62316 l
S
212.039464 52.075 m
212.039464 55.51228 l
S
411.72375 52.075 m
411.72375 55.51228 l
S
435.638036 52.075 m
435.638036 55.06876 l
S
213.235179 52.075 m
213.235179 54.90244 l
S
452.378036 52.075 m
452.378036 54.79156 l
S
240.736607 52.075 m
240.736607 54.51436 l
S
446.399464 52.075 m
446.399464 54.23716 l
S
445.20375 52.075 m
445.20375 54.23716 l
S
448.790893 52.075 m
448.790893 54.07084 l
S
244.32375 52.075 m
244.32375 54.0154 l
S
449.986607 52.075 m
449.986607 53.95996 l
S
463.139464 52.075 m
463.139464 53.95996 l
S
472.705179 52.075 m
472.705179 53.90452 l
S
214.430893 52.075 m
214.430893 53.79364 l
S
451.182321 52.075 m
451.182321 53.79364 l
S
233.562321 52.075 m
233.562321 53.7382 l
S
459.552321 52.075 m
459.552321 53.57188 l
S
454.769464 52.075 m
454.769464 53.51644 l
S
245.519464 52.075 m
245.519464 53.40556 l
S
237.149464 52.075 m
237.149464 53.40556 l
S
455.965179 52.075 m
455.965179 53.40556 l
S
218.018036 52.075 m
218.018036 53.40556 l
S
239.540893 52.075 m
239.540893 53.40556 l
S
231.170893 52.075 m
231.170893 53.35012 l
S
461.94375 52.075 m
461.94375 53.29468 l
S
484.662321 52.075 m
484.662321 53.23924 l
S
232.366607 52.075 m
232.366607 53.23924 l
S
457.160893 52.075 m
457.160893 53.23924 l
S
222.800893 52.075 m
222.800893 53.1838 l
S
220.409464 52.075 m
220.409464 53.1838 l
S
479.879464 52.075 m
479.879464 53.1838 l
S
485.858036 52.075 m
485.858036 53.1838 l
S
464.335179 52.075 m
464.335179 53.12836 l
S
460.748036 52.075 m
460.748036 53.12836 l
S
235.95375 52.075 m
235.95375 53.12836 l
S
466.726607 52.075 m
466.726607 53.07292 l
S
465.530893 52.075 m
465.530893 53.07292 l
S
219.21375 52.075 m
219.21375 53.07292 l
S
215.626607 52.075 m
215.626607 53.07292 l
S
458.356607 52.075 m
458.356607 53.01748 l
S
225.192321 52.075 m
225.192321 53.01748 l
S
470.31375 52.075 m
470.31375 53.01748 l
S
481.075179 52.075 m
481.075179 53.01748 l
S
469.118036 52.075 m
469.118036 53.01748 l
S
473.900893 52.075 m
473.900893 52.96204 l
S
467.922321 52.075 m
467.922321 52.96204 l
S
475.096607 52.075 m
475.096607 52.96204 l
S
482.270893 52.075 m
482.270893 52.96204 l
S
228.779464 52.075 m
228.779464 52.9066 l
S
489.445179 52.075 m
489.445179 52.85116 l
S
488.249464 52.075 m
488.249464 52.85116 l
S
478.68375 52.075 m
478.68375 52.85116 l
S
216.822321 52.075 m
216.822321 52.85116 l
S
491.836607 52.075 m
491.836607 52.85116 l
S
221.605179 52.075 m
221.605179 52.85116 l
S
487.05375 52.075 m
487.05375 52.85116 l
S
234.758036 52.075 m
234.758036 52.85116 l
S
503.79375 52.075 m
503.79375 52.85116 l
S
494.228036 52.075 m
494.228036 52.79572 l
S
500.206607 52.075 m
500.206607 52.79572 l
S
471.509464 52.075 m
471.509464 52.79572 l
S
238.345179 52.075 m
238.345179 52.74028 l
S
530.099464 52.075 m
530.099464 52.68484 l
S
476.292321 52.075 m
476.292321 52.68484 l
S
223.996607 52.075 m
223.996607 52.68484 l
S
226.388036 52.075 m
226.388036 52.68484 l
S
229.975179 52.075 m
229.975179 52.68484 l
S
496.619464 52.075 m
496.619464 52.6294 l
S
483.466607 52.075 m
483.466607 52.6294 l
S
513.359464 52.075 m
513.359464 52.57396 l
S
490.640893 52.075 m
490.640893 52.51852 l
S
227.58375 52.075 m
227.58375 52.51852 l
S
518.142321 52.075 m
518.142321 52.51852 l
S
493.032321 52.075 m
493.032321 52.46308 l
S
521.729464 52.075 m
521.729464 52.46308 l
S
512.16375 52.075 m
512.16375 52.46308 l
S
509.772321 52.075 m
509.772321 52.40764 l
S
506.185179 52.075 m
506.185179 52.40764 l
S
502.598036 52.075 m
502.598036 52.40764 l
S
516.946607 52.075 m
516.946607 52.3522 l
S
477.488036 52.075 m
477.488036 52.3522 l
S
536.078036 52.075 m
536.078036 52.3522 l
S
495.42375 52.075 m
495.42375 52.3522 l
S
533.686607 52.075 m
533.686607 52.3522 l
S
504.989464 52.075 m
504.989464 52.3522 l
S
532.490893 52.075 m
532.490893 52.3522 l
S
520.53375 52.075 m
520.53375 52.3522 l
S
524.120893 52.075 m
524.120893 52.29676 l
S
538.469464 52.075 m
538.469464 52.29676 l
S
552.818036 52.075 m
552.818036 52.29676 l
S
497.815179 52.075 m
497.815179 52.29676 l
S
501.402321 52.075 m
501.402321 52.29676 l
S
544.448036 52.075 m
544.448036 52.29676 l
S
562.38375 52.075 m
562.38375 52.29676 l
S
534.882321 52.075 m
534.882321 52.29676 l
S
510.968036 52.075 m
510.968036 52.29676 l
S
606.625179 52.075 m
606.625179 52.29676 l
S
556.405179 52.075 m
556.405179 52.24132 l
S
527.708036 52.075 m
527.708036 52.24132 l
S
733.370893 52.075 m
733.370893 52.24132 l
S
528.90375 52.075 m
528.90375 52.24132 l
S
576.732321 52.075 m
576.732321 52.24132 l
S
588.689464 52.075 m
588.689464 52.24132 l
S
522.925179 52.075 m
522.925179 52.24132 l
S
118.77375 52.075 m
118.77375 52.24132 l
S
499.010893 52.075 m
499.010893 52.24132 l
S
515.750893 52.075 m
515.750893 52.24132 l
S
514.555179 52.075 m
514.555179 52.24132 l
S
507.380893 52.075 m
507.380893 52.24132 l
S
610.212321 52.075 m
610.212321 52.24132 l
S
565.970893 52.075 m
565.970893 52.18588 l
S
137.905179 52.075 m
137.905179 52.18588 l
S
595.86375 52.075 m
595.86375 52.18588 l
S
567.166607 52.075 m
567.166607 52.18588 l
S
531.295179 52.075 m
531.295179 52.18588 l
S
166.602321 52.075 m
166.602321 52.18588 l
S
176.168036 52.075 m
176.168036 52.18588 l
S
548.035179 52.075 m
548.035179 52.18588 l
S
195.299464 52.075 m
195.299464 52.18588 l
S
665.215179 52.075 m
665.215179 52.18588 l
S
813.48375 52.075 m
813.48375 52.18588 l
S
546.839464 52.075 m
546.839464 52.18588 l
S
537.27375 52.075 m
537.27375 52.18588 l
S
204.865179 52.075 m
204.865179 52.18588 l
S
587.49375 52.075 m
587.49375 52.18588 l
S
570.75375 52.075 m
570.75375 52.18588 l
S
554.01375 52.075 m
554.01375 52.18588 l
S
99.642321 52.075 m
99.642321 52.18588 l
S
564.775179 52.075 m
564.775179 52.18588 l
S
573.145179 52.075 m
573.145179 52.18588 l
S
583.906607 52.075 m
583.906607 52.18588 l
S
549.230893 52.075 m
549.230893 52.18588 l
S
648.475179 52.075 m
648.475179 52.13044 l
S
640.105179 52.075 m
640.105179 52.13044 l
S
673.585179 52.075 m
673.585179 52.13044 l
S
800.330893 52.075 m
800.330893 52.13044 l
S
647.279464 52.075 m
647.279464 52.13044 l
S
185.73375 52.075 m
185.73375 52.13044 l
S
559.992321 52.075 m
559.992321 52.13044 l
S
558.796607 52.075 m
558.796607 52.13044 l
S
711.848036 52.075 m
711.848036 52.13044 l
S
577.928036 52.075 m
577.928036 52.13044 l
S
791.960893 52.075 m
791.960893 52.13044 l
S
638.909464 52.075 m
638.909464 52.13044 l
S
637.71375 52.075 m
637.71375 52.13044 l
S
525.316607 52.075 m
525.316607 52.13044 l
S
526.512321 52.075 m
526.512321 52.13044 l
S
632.930893 52.075 m
632.930893 52.13044 l
S
884.030893 52.075 m
884.030893 52.13044 l
S
784.786607 52.075 m
784.786607 52.13044 l
S
575.536607 52.075 m
575.536607 52.13044 l
S
519.338036 52.075 m
519.338036 52.13044 l
S
508.576607 52.075 m
508.576607 52.13044 l
S
568.362321 52.075 m
568.362321 52.13044 l
S
569.558036 52.075 m
569.558036 52.13044 l
S
811.092321 52.075 m
811.092321 52.13044 l
S
722.609464 52.075 m
722.609464 52.13044 l
S
656.845179 52.075 m
656.845179 52.13044 l
S
666.410893 52.075 m
666.410893 52.13044 l
S
196.495179 52.075 m
196.495179 52.13044 l
S
654.45375 52.075 m
654.45375 52.13044 l
S
876.856607 52.075 m
876.856607 52.13044 l
S
879.248036 52.075 m
879.248036 52.13044 l
S
574.340893 52.075 m
574.340893 52.13044 l
S
669.998036 52.075 m
669.998036 52.13044 l
S
824.245179 52.075 m
824.245179 52.13044 l
S
557.600893 52.075 m
557.600893 52.13044 l
S
630.539464 52.075 m
630.539464 52.13044 l
S
593.472321 52.075 m
593.472321 52.13044 l
S
119.969464 52.075 m
119.969464 52.13044 l
S
589.885179 52.075 m
589.885179 52.13044 l
S
539.665179 52.075 m
539.665179 52.13044 l
S
605.429464 52.075 m
605.429464 52.13044 l
S
603.038036 52.075 m
603.038036 52.13044 l
S
542.056607 52.075 m
542.056607 52.13044 l
S
848.159464 52.075 m
848.159464 52.13044 l
S
754.89375 52.075 m
754.89375 52.13044 l
S
601.842321 52.075 m
601.842321 52.13044 l
S
543.252321 52.075 m
543.252321 52.13044 l
S
753.698036 52.075 m
753.698036 52.13044 l
S
600.646607 52.075 m
600.646607 52.13044 l
S
899.575179 52.075 m
899.575179 52.13044 l
S
750.110893 52.075 m
750.110893 52.13044 l
S
545.64375 52.075 m
545.64375 52.13044 l
S
745.328036 52.075 m
745.328036 52.13044 l
S
855.33375 52.075 m
855.33375 52.13044 l
S
699.890893 52.075 m
699.890893 52.13044 l
S
136.709464 52.075 m
136.709464 52.13044 l
S
594.668036 52.075 m
594.668036 52.13044 l
S
759.676607 52.075 m
759.676607 52.13044 l
S
80.510893 52.075 m
80.510893 52.13044 l
S
760.872321 52.075 m
760.872321 52.13044 l
S
892.400893 52.075 m
892.400893 52.13044 l
S
625.756607 52.075 m
625.756607 52.13044 l
S
579.12375 52.075 m
579.12375 52.13044 l
S
72.140893 52.075 m
72.140893 52.13044 l
S
624.560893 52.075 m
624.560893 52.13044 l
S
732.175179 52.075 m
732.175179 52.13044 l
S
684.346607 52.075 m
684.346607 52.13044 l
S
928.272321 52.075 m
928.272321 52.13044 l
S
620.97375 52.075 m
620.97375 52.13044 l
S
123.556607 52.075 m
123.556607 52.13044 l
S
617.386607 52.075 m
617.386607 52.13044 l
S
582.710893 52.075 m
582.710893 52.13044 l
S
686.738036 52.075 m
686.738036 52.13044 l
S
157.036607 52.075 m
157.036607 52.13044 l
S
614.995179 52.075 m
614.995179 52.13044 l
S
918.706607 52.075 m
918.706607 52.13044 l
S
612.60375 52.075 m
612.60375 52.13044 l
S
735.762321 52.075 m
735.762321 52.13044 l
S
151.058036 52.075 m
151.058036 52.13044 l
S
891.205179 52.075 m
891.205179 52.13044 l
S
762.068036 52.075 m
762.068036 52.13044 l
S
609.016607 52.075 m
609.016607 52.13044 l
S
629.34375 52.075 m
629.34375 52.13044 l
S
Q
q
2 J
0 j
0.8 w
/DeviceRGB {} cs
[0 0 0] sc
85.29375 52.075 m
85.29375 606.475 l
S
922.29375 52.075 m
922.29375 606.475 l
S
85.29375 52.075 m
922.29375 52.075 l
S
85.29375 606.475 m
922.29375 606.475 l
S
0 J
/DeviceGray {} cs
[0] sc
1 j
1 w
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
319.04375 624.240625 Td
/F14_0 24 Tf
(WEBGREYC Holds Histogram)
[23.736
0
15.168
0
16.464
0
18.6
0
16.68
0
15.168
0
14.664
0
16.752
0
7.632
0
18.048
0
14.688
0
6.672
0
15.24
0
12.504
0
7.632
0
18.048
0
6.672
0
12.504
0
9.408
0
14.688
0
15.24
0
9.864
0
14.712
0
23.376
0] Tj
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font T3_14_0
%%EOF
