%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 21.05.0 (http://poppler.freedesktop.org)
%%Creator: Matplotlib v3.3.3, https://matplotlib.org
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 935 650
%%HiResBoundingBox: 0 0 934.267188 649.675
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font T3_14_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-1021 -463 1794 1233] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 28 dict def
CharProcs begin
/D {
770 0 98 0 711 729 setcachedevice
q
197 648 m
197 81 l
316 81 l
416 81 490 103 537 149 c
583 195 607 267 607 365 c
607 463 583 534 537 580 c
490 625 416 648 316 648 c
197 648 l
98 729 m
301 729 l
442 729 546 699 612 641 c
678 582 711 490 711 365 c
711 239 677 147 611 88 c
545 29 441 0 301 0 c
98 0 l
98 729 l
f
Q
} def
/G {
775 0 56 -13 693 742 setcachedevice
q
595 104 m
595 300 l
434 300 l
434 381 l
693 381 l
693 68 l
655 40 613 20 567 7 c
521 -6 472 -13 420 -13 c
306 -13 216 20 152 86 c
88 152 56 245 56 364 c
56 482 88 575 152 642 c
216 708 306 742 420 742 c
467 742 512 736 555 724 c
598 712 638 695 674 673 c
674 568 l
637 598 598 621 557 637 c
516 653 473 661 428 661 c
338 661 271 636 227 586 c
182 536 160 462 160 364 c
160 265 182 191 227 141 c
271 91 338 67 428 67 c
462 67 493 70 521 76 c
549 82 573 91 595 104 c
f
Q
} def
/H {
752 0 98 0 654 729 setcachedevice
q
98 729 m
197 729 l
197 430 l
555 430 l
555 729 l
654 729 l
654 0 l
555 0 l
555 347 l
197 347 l
197 0 l
98 0 l
98 729 l
f
Q
} def
/L {
557 0 98 0 552 729 setcachedevice
q
98 729 m
197 729 l
197 83 l
552 83 l
552 0 l
98 0 l
98 729 l
f
Q
} def
/M {
863 0 98 0 765 729 setcachedevice
q
98 729 m
245 729 l
431 233 l
618 729 l
765 729 l
765 0 l
669 0 l
669 640 l
481 140 l
382 140 l
194 640 l
194 0 l
98 0 l
98 729 l
f
Q
} def
/O {
787 0 56 -13 731 742 setcachedevice
q
394 662 m
322 662 265 635 223 582 c
181 528 160 456 160 364 c
160 272 181 199 223 146 c
265 92 322 66 394 66 c
465 66 522 92 564 146 c
606 199 627 272 627 364 c
627 456 606 528 564 582 c
522 635 465 662 394 662 c
394 742 m
496 742 577 707 639 639 c
700 571 731 479 731 364 c
731 248 700 157 639 89 c
577 21 496 -13 394 -13 c
291 -13 209 21 148 89 c
86 157 56 248 56 364 c
56 479 86 571 148 639 c
209 707 291 742 394 742 c
f
Q
} def
/a {
613 0 60 -13 522 560 setcachedevice
q
343 275 m
270 275 220 266 192 250 c
164 233 150 205 150 165 c
150 133 160 107 181 89 c
202 70 231 61 267 61 c
317 61 357 78 387 114 c
417 149 432 196 432 255 c
432 275 l
343 275 l
522 312 m
522 0 l
432 0 l
432 83 l
411 49 385 25 355 10 c
325 -5 287 -13 243 -13 c
187 -13 142 2 109 33 c
76 64 60 106 60 159 c
60 220 80 266 122 298 c
163 329 224 345 306 345 c
432 345 l
432 354 l
432 395 418 427 391 450 c
364 472 326 484 277 484 c
245 484 215 480 185 472 c
155 464 127 453 100 439 c
100 522 l
132 534 164 544 195 550 c
226 556 256 560 286 560 c
365 560 424 539 463 498 c
502 457 522 395 522 312 c
f
Q
} def
/c {
550 0 55 -13 488 560 setcachedevice
q
488 526 m
488 442 l
462 456 437 466 411 473 c
385 480 360 484 334 484 c
276 484 230 465 198 428 c
166 391 150 339 150 273 c
150 206 166 154 198 117 c
230 80 276 62 334 62 c
360 62 385 65 411 72 c
437 79 462 90 488 104 c
488 21 l
462 9 436 0 410 -5 c
383 -10 354 -13 324 -13 c
242 -13 176 12 128 64 c
79 115 55 185 55 273 c
55 362 79 432 128 483 c
177 534 244 560 330 560 c
358 560 385 557 411 551 c
437 545 463 537 488 526 c
f
Q
} def
/d {
635 0 55 -13 544 760 setcachedevice
q
454 464 m
454 760 l
544 760 l
544 0 l
454 0 l
454 82 l
435 49 411 25 382 10 c
353 -5 319 -13 279 -13 c
213 -13 159 13 117 65 c
75 117 55 187 55 273 c
55 359 75 428 117 481 c
159 533 213 560 279 560 c
319 560 353 552 382 536 c
411 520 435 496 454 464 c
148 273 m
148 207 161 155 188 117 c
215 79 253 61 301 61 c
348 61 385 79 413 117 c
440 155 454 207 454 273 c
454 339 440 390 413 428 c
385 466 348 485 301 485 c
253 485 215 466 188 428 c
161 390 148 339 148 273 c
f
Q
} def
/e {
615 0 55 -13 562 560 setcachedevice
q
562 296 m
562 252 l
149 252 l
153 190 171 142 205 110 c
238 78 284 62 344 62 c
378 62 412 66 444 74 c
476 82 509 95 541 113 c
541 28 l
509 14 476 3 442 -3 c
408 -9 373 -13 339 -13 c
251 -13 182 12 131 62 c
80 112 55 181 55 268 c
55 357 79 428 127 481 c
175 533 241 560 323 560 c
397 560 455 536 498 489 c
540 441 562 377 562 296 c
472 322 m
471 371 457 410 431 440 c
404 469 368 484 324 484 c
274 484 234 469 204 441 c
174 413 156 373 152 322 c
472 322 l
f
Q
} def
/five {
636 0 77 -13 549 729 setcachedevice
q
108 729 m
495 729 l
495 646 l
198 646 l
198 467 l
212 472 227 476 241 478 c
255 480 270 482 284 482 c
365 482 429 459 477 415 c
525 370 549 310 549 234 c
549 155 524 94 475 51 c
426 8 357 -13 269 -13 c
238 -13 207 -10 175 -6 c
143 -1 111 6 77 17 c
77 116 l
106 100 136 88 168 80 c
199 72 232 69 267 69 c
323 69 368 83 401 113 c
433 143 450 183 450 234 c
450 284 433 324 401 354 c
368 384 323 399 267 399 c
241 399 214 396 188 390 c
162 384 135 375 108 363 c
108 729 l
f
Q
} def
/four {
636 0 49 0 580 729 setcachedevice
q
378 643 m
129 254 l
378 254 l
378 643 l
352 729 m
476 729 l
476 254 l
580 254 l
580 172 l
476 172 l
476 0 l
378 0 l
378 172 l
49 172 l
49 267 l
352 729 l
f
Q
} def
/g {
635 0 55 -207 544 560 setcachedevice
q
454 280 m
454 344 440 395 414 431 c
387 467 349 485 301 485 c
253 485 215 467 188 431 c
161 395 148 344 148 280 c
148 215 161 165 188 129 c
215 93 253 75 301 75 c
349 75 387 93 414 129 c
440 165 454 215 454 280 c
544 68 m
544 -24 523 -93 482 -139 c
440 -184 377 -207 292 -207 c
260 -207 231 -204 203 -200 c
175 -195 147 -188 121 -178 c
121 -91 l
147 -105 173 -115 199 -122 c
225 -129 251 -133 278 -133 c
336 -133 380 -117 410 -87 c
439 -56 454 -10 454 52 c
454 96 l
435 64 411 40 382 24 c
353 8 319 0 279 0 c
211 0 157 25 116 76 c
75 127 55 195 55 280 c
55 364 75 432 116 483 c
157 534 211 560 279 560 c
319 560 353 552 382 536 c
411 520 435 496 454 464 c
454 547 l
544 547 l
544 68 l
f
Q
} def
/i {
278 0 94 0 184 760 setcachedevice
q
94 547 m
184 547 l
184 0 l
94 0 l
94 547 l
94 760 m
184 760 l
184 646 l
94 646 l
94 760 l
f
Q
} def
/l {
278 0 94 0 184 760 setcachedevice
q
94 0 90 760 re
f
Q
} def
/m {
974 0 91 0 889 560 setcachedevice
q
520 442 m
542 482 569 511 600 531 c
631 550 668 560 711 560 c
767 560 811 540 842 500 c
873 460 889 403 889 330 c
889 0 l
799 0 l
799 327 l
799 379 789 418 771 444 c
752 469 724 482 686 482 c
639 482 602 466 575 435 c
548 404 535 362 535 309 c
535 0 l
445 0 l
445 327 l
445 379 435 418 417 444 c
398 469 369 482 331 482 c
285 482 248 466 221 435 c
194 404 181 362 181 309 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
201 495 226 520 255 536 c
283 552 317 560 357 560 c
397 560 430 550 458 530 c
486 510 506 480 520 442 c
f
Q
} def
/n {
634 0 91 0 549 560 setcachedevice
q
549 330 m
549 0 l
459 0 l
459 327 l
459 379 448 417 428 443 c
408 469 378 482 338 482 c
289 482 251 466 223 435 c
195 404 181 362 181 309 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
202 494 227 519 257 535 c
286 551 320 560 358 560 c
420 560 468 540 500 501 c
532 462 549 405 549 330 c
f
Q
} def
/o {
612 0 55 -13 557 560 setcachedevice
q
306 484 m
258 484 220 465 192 427 c
164 389 150 338 150 273 c
150 207 163 156 191 118 c
219 80 257 62 306 62 c
354 62 392 80 420 118 c
448 156 462 207 462 273 c
462 337 448 389 420 427 c
392 465 354 484 306 484 c
306 560 m
384 560 445 534 490 484 c
534 433 557 363 557 273 c
557 183 534 113 490 63 c
445 12 384 -13 306 -13 c
227 -13 165 12 121 63 c
77 113 55 183 55 273 c
55 363 77 433 121 484 c
165 534 227 560 306 560 c
f
Q
} def
/one {
636 0 110 0 544 729 setcachedevice
q
124 83 m
285 83 l
285 639 l
110 604 l
110 694 l
284 729 l
383 729 l
383 83 l
544 83 l
544 0 l
124 0 l
124 83 l
f
Q
} def
/r {
411 0 91 0 411 560 setcachedevice
q
411 463 m
401 469 390 473 378 476 c
366 478 353 480 339 480 c
288 480 249 463 222 430 c
194 397 181 350 181 288 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
199 495 224 520 254 536 c
284 552 321 560 365 560 c
371 560 378 559 386 559 c
393 558 401 557 411 555 c
411 463 l
f
Q
} def
/s {
521 0 54 -13 472 560 setcachedevice
q
443 531 m
443 446 l
417 458 391 468 364 475 c
336 481 308 485 279 485 c
234 485 200 478 178 464 c
156 450 145 430 145 403 c
145 382 153 366 169 354 c
185 342 217 330 265 320 c
296 313 l
360 299 405 279 432 255 c
458 230 472 195 472 151 c
472 100 452 60 412 31 c
372 1 316 -13 246 -13 c
216 -13 186 -10 154 -5 c
122 0 89 8 54 20 c
54 113 l
87 95 120 82 152 74 c
184 65 216 61 248 61 c
290 61 323 68 346 82 c
368 96 380 117 380 144 c
380 168 371 187 355 200 c
339 213 303 226 247 238 c
216 245 l
160 257 119 275 95 299 c
70 323 58 356 58 399 c
58 450 76 490 112 518 c
148 546 200 560 268 560 c
301 560 332 557 362 552 c
391 547 418 540 443 531 c
f
Q
} def
/six {
636 0 70 -13 573 742 setcachedevice
q
330 404 m
286 404 251 388 225 358 c
199 328 186 286 186 234 c
186 181 199 139 225 109 c
251 79 286 64 330 64 c
374 64 409 79 435 109 c
461 139 474 181 474 234 c
474 286 461 328 435 358 c
409 388 374 404 330 404 c
526 713 m
526 623 l
501 635 476 644 451 650 c
425 656 400 659 376 659 c
310 659 260 637 226 593 c
192 549 172 482 168 394 c
187 422 211 444 240 459 c
269 474 301 482 336 482 c
409 482 467 459 509 415 c
551 371 573 310 573 234 c
573 159 550 99 506 54 c
462 9 403 -13 330 -13 c
246 -13 181 19 137 83 c
92 147 70 241 70 364 c
70 479 97 571 152 639 c
206 707 280 742 372 742 c
396 742 421 739 447 735 c
472 730 498 723 526 713 c
f
Q
} def
/space {
318 0 0 0 0 0 setcachedevice
q
Q
} def
/t {
392 0 27 0 368 702 setcachedevice
q
183 702 m
183 547 l
368 547 l
368 477 l
183 477 l
183 180 l
183 135 189 106 201 94 c
213 81 238 75 276 75 c
368 75 l
368 0 l
276 0 l
206 0 158 13 132 39 c
106 65 93 112 93 180 c
93 477 l
27 477 l
27 547 l
93 547 l
93 702 l
183 702 l
f
Q
} def
/three {
636 0 76 -13 556 742 setcachedevice
q
406 393 m
453 383 490 362 516 330 c
542 298 556 258 556 212 c
556 140 531 84 482 45 c
432 6 362 -13 271 -13 c
240 -13 208 -10 176 -4 c
144 1 110 10 76 22 c
76 117 l
103 101 133 89 166 81 c
198 73 232 69 268 69 c
330 69 377 81 409 105 c
441 129 458 165 458 212 c
458 254 443 288 413 312 c
383 336 341 349 287 349 c
202 349 l
202 430 l
291 430 l
339 430 376 439 402 459 c
428 478 441 506 441 543 c
441 580 427 609 401 629 c
374 649 336 659 287 659 c
260 659 231 656 200 650 c
169 644 135 635 98 623 c
98 711 l
135 721 170 729 203 734 c
235 739 266 742 296 742 c
370 742 429 725 473 691 c
517 657 539 611 539 553 c
539 513 527 479 504 451 c
481 423 448 403 406 393 c
f
Q
} def
/two {
636 0 73 0 536 742 setcachedevice
q
192 83 m
536 83 l
536 0 l
73 0 l
73 83 l
110 121 161 173 226 239 c
290 304 331 346 348 365 c
380 400 402 430 414 455 c
426 479 433 504 433 528 c
433 566 419 598 392 622 c
365 646 330 659 286 659 c
255 659 222 653 188 643 c
154 632 117 616 78 594 c
78 694 l
118 710 155 722 189 730 c
223 738 255 742 284 742 c
359 742 419 723 464 685 c
509 647 532 597 532 534 c
532 504 526 475 515 449 c
504 422 484 390 454 354 c
446 344 420 317 376 272 c
332 227 271 164 192 83 c
f
Q
} def
/u {
634 0 85 -13 543 560 setcachedevice
q
85 216 m
85 547 l
175 547 l
175 219 l
175 167 185 129 205 103 c
225 77 255 64 296 64 c
344 64 383 79 411 110 c
439 141 453 183 453 237 c
453 547 l
543 547 l
543 0 l
453 0 l
453 84 l
431 50 405 26 377 10 c
348 -5 315 -13 277 -13 c
214 -13 166 6 134 45 c
101 83 85 140 85 216 c
311 560 m
311 560 l
f
Q
} def
/zero {
636 0 66 -13 570 742 setcachedevice
q
318 664 m
267 664 229 639 203 589 c
177 539 165 464 165 364 c
165 264 177 189 203 139 c
229 89 267 64 318 64 c
369 64 407 89 433 139 c
458 189 471 264 471 364 c
471 464 458 539 433 589 c
407 639 369 664 318 664 c
318 742 m
399 742 461 709 505 645 c
548 580 570 486 570 364 c
570 241 548 147 505 83 c
461 19 399 -13 318 -13 c
236 -13 173 19 130 83 c
87 147 66 241 66 364 c
66 486 87 580 130 645 c
173 709 236 742 318 742 c
f
Q
} def
end
currentdict end
/T3_14_0 exch definefont pop
%%EndResource
/F14_0 /T3_14_0 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 934.267188 649.675 re
W
q
1 j
/DeviceGray {} cs
[1] sc
0 j
0 w
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
0 0 934.267187 649.675 re
f
/DeviceGray {} CS
[0] SC
75.746875 52.075 837 554.4 re
f
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
75.746875 52.075 m
75.746875 48.575 l
f
75.746875 52.075 m
75.746875 48.575 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
70.973437 33.684375 Td
/F14_0 15 Tf
(0)
[9.54
0] Tj
0.8 w
215.246875 52.075 m
215.246875 48.575 l
f
215.246875 52.075 m
215.246875 48.575 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
200.926563 33.684375 Td
/F14_0 15 Tf
(100)
[9.54
0
9.54
0
9.54
0] Tj
0.8 w
354.746875 52.075 m
354.746875 48.575 l
f
354.746875 52.075 m
354.746875 48.575 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
340.426562 33.684375 Td
/F14_0 15 Tf
(200)
[9.54
0
9.54
0
9.54
0] Tj
0.8 w
494.246875 52.075 m
494.246875 48.575 l
f
494.246875 52.075 m
494.246875 48.575 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
479.926562 33.684375 Td
/F14_0 15 Tf
(300)
[9.54
0
9.54
0
9.54
0] Tj
0.8 w
633.746875 52.075 m
633.746875 48.575 l
f
633.746875 52.075 m
633.746875 48.575 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
619.426562 33.684375 Td
/F14_0 15 Tf
(400)
[9.54
0
9.54
0
9.54
0] Tj
0.8 w
773.246875 52.075 m
773.246875 48.575 l
f
773.246875 52.075 m
773.246875 48.575 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
758.926562 33.684375 Td
/F14_0 15 Tf
(500)
[9.54
0
9.54
0
9.54
0] Tj
0.8 w
912.746875 52.075 m
912.746875 48.575 l
f
912.746875 52.075 m
912.746875 48.575 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
898.426562 33.684375 Td
/F14_0 15 Tf
(600)
[9.54
0
9.54
0
9.54
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
433.614063 11.35625 Td
/F14_0 20 Tf
(Milliseconds)
[17.26
0
5.56
0
5.56
0
5.56
0
5.56
0
10.42
0
12.3
0
11
0
12.24
0
12.68
0
12.7
0
10.42
0] Tj
0.8 w
75.746875 52.075 m
72.246875 52.075 l
f
75.746875 52.075 m
72.246875 52.075 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
59.2 46.379687 Td
/F14_0 15 Tf
(0)
[9.54
0] Tj
0.8 w
75.746875 162.955 m
72.246875 162.955 l
f
75.746875 162.955 m
72.246875 162.955 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
30.559375 157.259687 Td
/F14_0 15 Tf
(1000)
[9.54
0
9.54
0
9.54
0
9.54
0] Tj
0.8 w
75.746875 273.835 m
72.246875 273.835 l
f
75.746875 273.835 m
72.246875 273.835 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
30.559375 268.139688 Td
/F14_0 15 Tf
(2000)
[9.54
0
9.54
0
9.54
0
9.54
0] Tj
0.8 w
75.746875 384.715 m
72.246875 384.715 l
f
75.746875 384.715 m
72.246875 384.715 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
30.559375 379.019688 Td
/F14_0 15 Tf
(3000)
[9.54
0
9.54
0
9.54
0
9.54
0] Tj
0.8 w
75.746875 495.595 m
72.246875 495.595 l
f
75.746875 495.595 m
72.246875 495.595 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
30.559375 489.899688 Td
/F14_0 15 Tf
(4000)
[9.54
0
9.54
0
9.54
0
9.54
0] Tj
0.8 w
75.746875 606.475 m
72.246875 606.475 l
f
75.746875 606.475 m
72.246875 606.475 l
S
1 w
[1 0 0 1 0 0] Tm
0 0 Td
30.559375 600.779688 Td
/F14_0 15 Tf
(5000)
[9.54
0
9.54
0
9.54
0
9.54
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 22.403125 266.923437] Tm
0 0 Td
0 0 Td
/F14_0 20 Tf
(Occurrences)
[15.74
0
11
0
11
0
12.68
0
8.22
0
8.22
0
12.3
0
12.68
0
11
0
12.3
0
10.42
0] Tj
q
75.746875 52.075 837 554.4 re
W
0.75 w
/DeviceRGB {} cs
[0 0 0] sc
312.896875 52.075 m
312.896875 520.543 l
S
326.846875 52.075 m
326.846875 516.88396 l
S
340.796875 52.075 m
340.796875 502.35868 l
S
298.946875 52.075 m
298.946875 501.139 l
S
354.746875 52.075 m
354.746875 468.9838 l
S
284.996875 52.075 m
284.996875 447.47308 l
S
368.696875 52.075 m
368.696875 445.25548 l
S
271.046875 52.075 m
271.046875 428.17996 l
S
257.096875 52.075 m
257.096875 398.24236 l
S
382.646875 52.075 m
382.646875 390.70252 l
S
396.596875 52.075 m
396.596875 365.64364 l
S
410.546875 52.075 m
410.546875 339.14332 l
S
243.146875 52.075 m
243.146875 326.17036 l
S
229.196875 52.075 m
229.196875 318.7414 l
S
424.496875 52.075 m
424.496875 295.23484 l
S
438.446875 52.075 m
438.446875 260.41852 l
S
215.246875 52.075 m
215.246875 253.98748 l
S
452.396875 52.075 m
452.396875 249.77404 l
S
466.346875 52.075 m
466.346875 228.26332 l
S
480.296875 52.075 m
480.296875 216.1774 l
S
494.246875 52.075 m
494.246875 197.54956 l
S
508.196875 52.075 m
508.196875 187.3486 l
S
201.296875 52.075 m
201.296875 185.57452 l
S
522.146875 52.075 m
522.146875 185.131 l
S
536.096875 52.075 m
536.096875 175.1518 l
S
187.346875 52.075 m
187.346875 160.62652 l
S
550.046875 52.075 m
550.046875 159.0742 l
S
563.996875 52.075 m
563.996875 158.18716 l
S
577.946875 52.075 m
577.946875 155.30428 l
S
591.896875 52.075 m
591.896875 143.77276 l
S
173.396875 52.075 m
173.396875 134.45884 l
S
605.846875 52.075 m
605.846875 128.91484 l
S
619.796875 52.075 m
619.796875 128.80396 l
S
633.746875 52.075 m
633.746875 124.147 l
S
661.646875 52.075 m
661.646875 120.70972 l
S
647.696875 52.075 m
647.696875 118.71388 l
S
159.446875 52.075 m
159.446875 112.39372 l
S
689.546875 52.075 m
689.546875 107.73676 l
S
675.596875 52.075 m
675.596875 106.51708 l
S
703.496875 52.075 m
703.496875 102.74716 l
S
717.446875 52.075 m
717.446875 101.08396 l
S
325.451875 52.075 m
325.451875 99.64252 l
S
731.396875 52.075 m
731.396875 98.86636 l
S
339.401875 52.075 m
339.401875 98.42284 l
S
367.301875 52.075 m
367.301875 95.3182 l
S
745.346875 52.075 m
745.346875 94.2094 l
S
311.501875 52.075 m
311.501875 92.65708 l
S
787.196875 52.075 m
787.196875 91.32652 l
S
353.351875 52.075 m
353.351875 91.21564 l
S
381.251875 52.075 m
381.251875 90.55036 l
S
759.296875 52.075 m
759.296875 90.3286 l
S
297.551875 52.075 m
297.551875 89.88508 l
S
145.496875 52.075 m
145.496875 89.44156 l
S
773.246875 52.075 m
773.246875 88.111 l
S
395.201875 52.075 m
395.201875 87.88924 l
S
815.096875 52.075 m
815.096875 86.33692 l
S
801.146875 52.075 m
801.146875 86.11516 l
S
829.046875 52.075 m
829.046875 85.22812 l
S
870.896875 52.075 m
870.896875 84.7846 l
S
409.151875 52.075 m
409.151875 84.56284 l
S
842.996875 52.075 m
842.996875 83.01052 l
S
283.601875 52.075 m
283.601875 82.23436 l
S
856.946875 52.075 m
856.946875 81.12556 l
S
884.846875 52.075 m
884.846875 80.23852 l
S
437.051875 52.075 m
437.051875 79.795 l
S
423.101875 52.075 m
423.101875 79.2406 l
S
258.491875 52.075 m
258.491875 79.2406 l
S
451.001875 52.075 m
451.001875 78.57532 l
S
244.541875 52.075 m
244.541875 77.35564 l
S
898.796875 52.075 m
898.796875 77.24476 l
S
131.546875 52.075 m
131.546875 76.24684 l
S
269.651875 52.075 m
269.651875 75.47068 l
S
230.591875 52.075 m
230.591875 74.47276 l
S
464.951875 52.075 m
464.951875 72.92044 l
S
478.901875 52.075 m
478.901875 70.9246 l
S
492.851875 52.075 m
492.851875 70.81372 l
S
506.801875 52.075 m
506.801875 70.03756 l
S
534.701875 52.075 m
534.701875 69.59404 l
S
216.641875 52.075 m
216.641875 69.15052 l
S
272.441875 52.075 m
272.441875 68.92876 l
S
520.751875 52.075 m
520.751875 68.48524 l
S
590.501875 52.075 m
590.501875 66.71116 l
S
548.651875 52.075 m
548.651875 66.4894 l
S
576.551875 52.075 m
576.551875 66.15676 l
S
604.451875 52.075 m
604.451875 65.935 l
S
255.701875 52.075 m
255.701875 65.71324 l
S
562.601875 52.075 m
562.601875 65.49148 l
S
286.391875 52.075 m
286.391875 63.93916 l
S
117.596875 52.075 m
117.596875 63.7174 l
S
632.351875 52.075 m
632.351875 63.163 l
S
241.751875 52.075 m
241.751875 63.163 l
S
660.251875 52.075 m
660.251875 63.05212 l
S
674.201875 52.075 m
674.201875 63.05212 l
S
618.401875 52.075 m
618.401875 63.05212 l
S
702.101875 52.075 m
702.101875 62.83036 l
S
227.801875 52.075 m
227.801875 62.49772 l
S
213.851875 52.075 m
213.851875 62.38684 l
S
199.901875 52.075 m
199.901875 61.61068 l
S
730.001875 52.075 m
730.001875 61.27804 l
S
688.151875 52.075 m
688.151875 61.27804 l
S
300.341875 52.075 m
300.341875 61.16716 l
S
757.901875 52.075 m
757.901875 61.05628 l
S
202.691875 52.075 m
202.691875 60.83452 l
S
771.851875 52.075 m
771.851875 60.50188 l
S
314.291875 52.075 m
314.291875 60.50188 l
S
813.701875 52.075 m
813.701875 60.16924 l
S
646.301875 52.075 m
646.301875 60.16924 l
S
716.051875 52.075 m
716.051875 60.05836 l
S
799.751875 52.075 m
799.751875 60.05836 l
S
883.451875 52.075 m
883.451875 59.94748 l
S
188.741875 52.075 m
188.741875 59.72572 l
S
841.601875 52.075 m
841.601875 59.72572 l
S
743.951875 52.075 m
743.951875 59.72572 l
S
328.241875 52.075 m
328.241875 59.72572 l
S
785.801875 52.075 m
785.801875 59.61484 l
S
827.651875 52.075 m
827.651875 59.50396 l
S
855.551875 52.075 m
855.551875 59.17132 l
S
185.951875 52.075 m
185.951875 58.83868 l
S
897.401875 52.075 m
897.401875 58.83868 l
S
342.191875 52.075 m
342.191875 58.28428 l
S
172.001875 52.075 m
172.001875 58.06252 l
S
151.076875 52.075 m
151.076875 57.84076 l
S
911.351875 52.075 m
911.351875 57.17548 l
S
356.141875 52.075 m
356.141875 57.17548 l
S
370.091875 52.075 m
370.091875 57.0646 l
S
174.791875 52.075 m
174.791875 56.84284 l
S
869.501875 52.075 m
869.501875 56.73196 l
S
384.041875 52.075 m
384.041875 56.73196 l
S
146.891875 52.075 m
146.891875 56.62108 l
S
160.841875 52.075 m
160.841875 56.5102 l
S
130.151875 52.075 m
130.151875 56.28844 l
S
248.726875 52.075 m
248.726875 56.17756 l
S
262.676875 52.075 m
262.676875 56.06668 l
S
158.051875 52.075 m
158.051875 55.73404 l
S
220.826875 52.075 m
220.826875 55.73404 l
S
137.126875 52.075 m
137.126875 55.73404 l
S
116.201875 52.075 m
116.201875 55.4014 l
S
251.516875 52.075 m
251.516875 55.4014 l
S
144.101875 52.075 m
144.101875 55.29052 l
S
234.776875 52.075 m
234.776875 55.29052 l
S
411.941875 52.075 m
411.941875 55.17964 l
S
247.331875 52.075 m
247.331875 55.17964 l
S
265.466875 52.075 m
265.466875 55.17964 l
S
335.216875 52.075 m
335.216875 55.17964 l
S
321.266875 52.075 m
321.266875 55.06876 l
S
397.991875 52.075 m
397.991875 54.95788 l
S
363.116875 52.075 m
363.116875 54.847 l
S
293.366875 52.075 m
293.366875 54.847 l
S
165.026875 52.075 m
165.026875 54.847 l
S
192.926875 52.075 m
192.926875 54.62524 l
S
467.741875 52.075 m
467.741875 54.40348 l
S
279.416875 52.075 m
279.416875 54.40348 l
S
105.041875 52.075 m
105.041875 54.2926 l
S
107.831875 52.075 m
107.831875 54.2926 l
S
425.891875 52.075 m
425.891875 54.2926 l
S
307.316875 52.075 m
307.316875 54.2926 l
S
332.426875 52.075 m
332.426875 54.07084 l
S
195.716875 52.075 m
195.716875 54.07084 l
S
178.976875 52.075 m
178.976875 54.07084 l
S
237.566875 52.075 m
237.566875 54.07084 l
S
509.591875 52.075 m
509.591875 53.95996 l
S
318.476875 52.075 m
318.476875 53.95996 l
S
317.081875 52.075 m
317.081875 53.84908 l
S
346.376875 52.075 m
346.376875 53.84908 l
S
290.576875 52.075 m
290.576875 53.84908 l
S
209.666875 52.075 m
209.666875 53.84908 l
S
219.431875 52.075 m
219.431875 53.84908 l
S
377.066875 52.075 m
377.066875 53.7382 l
S
304.526875 52.075 m
304.526875 53.7382 l
S
233.381875 52.075 m
233.381875 53.7382 l
S
453.791875 52.075 m
453.791875 53.7382 l
S
308.711875 52.075 m
308.711875 53.7382 l
S
223.616875 52.075 m
223.616875 53.7382 l
S
495.641875 52.075 m
495.641875 53.7382 l
S
225.011875 52.075 m
225.011875 53.7382 l
S
391.016875 52.075 m
391.016875 53.62732 l
S
331.031875 52.075 m
331.031875 53.62732 l
S
252.911875 52.075 m
252.911875 53.62732 l
S
112.016875 52.075 m
112.016875 53.62732 l
S
481.691875 52.075 m
481.691875 53.62732 l
S
280.811875 52.075 m
280.811875 53.62732 l
S
266.861875 52.075 m
266.861875 53.62732 l
S
324.056875 52.075 m
324.056875 53.51644 l
S
537.491875 52.075 m
537.491875 53.51644 l
S
357.536875 52.075 m
357.536875 53.51644 l
S
404.966875 52.075 m
404.966875 53.51644 l
S
349.166875 52.075 m
349.166875 53.51644 l
S
261.281875 52.075 m
261.281875 53.51644 l
S
132.941875 52.075 m
132.941875 53.51644 l
S
149.681875 52.075 m
149.681875 53.51644 l
S
276.626875 52.075 m
276.626875 53.40556 l
S
322.661875 52.075 m
322.661875 53.40556 l
S
301.736875 52.075 m
301.736875 53.40556 l
S
287.786875 52.075 m
287.786875 53.40556 l
S
296.156875 52.075 m
296.156875 53.40556 l
S
206.876875 52.075 m
206.876875 53.40556 l
S
211.061875 52.075 m
211.061875 53.29468 l
S
181.766875 52.075 m
181.766875 53.29468 l
S
125.966875 52.075 m
125.966875 53.29468 l
S
240.356875 52.075 m
240.356875 53.29468 l
S
439.841875 52.075 m
439.841875 53.29468 l
S
365.906875 52.075 m
365.906875 53.29468 l
S
282.206875 52.075 m
282.206875 53.29468 l
S
205.481875 52.075 m
205.481875 53.29468 l
S
245.936875 52.075 m
245.936875 53.29468 l
S
360.326875 52.075 m
360.326875 53.1838 l
S
358.931875 52.075 m
358.931875 53.1838 l
S
579.341875 52.075 m
579.341875 53.1838 l
S
163.631875 52.075 m
163.631875 53.1838 l
S
238.961875 52.075 m
238.961875 53.1838 l
S
275.231875 52.075 m
275.231875 53.1838 l
S
167.816875 52.075 m
167.816875 53.1838 l
S
177.581875 52.075 m
177.581875 53.1838 l
S
329.636875 52.075 m
329.636875 53.07292 l
S
294.761875 52.075 m
294.761875 53.07292 l
S
551.441875 52.075 m
551.441875 53.07292 l
S
474.716875 52.075 m
474.716875 53.07292 l
S
254.306875 52.075 m
254.306875 53.07292 l
S
291.971875 52.075 m
291.971875 53.07292 l
S
460.766875 52.075 m
460.766875 53.07292 l
S
273.836875 52.075 m
273.836875 53.07292 l
S
197.111875 52.075 m
197.111875 53.07292 l
S
338.006875 52.075 m
338.006875 53.07292 l
S
289.181875 52.075 m
289.181875 53.07292 l
S
191.531875 52.075 m
191.531875 53.07292 l
S
350.561875 52.075 m
350.561875 53.07292 l
S
315.686875 52.075 m
315.686875 53.07292 l
S
268.256875 52.075 m
268.256875 53.07292 l
S
135.731875 52.075 m
135.731875 53.07292 l
S
183.161875 52.075 m
183.161875 53.07292 l
S
139.916875 52.075 m
139.916875 53.07292 l
S
418.916875 52.075 m
418.916875 52.96204 l
S
226.406875 52.075 m
226.406875 52.96204 l
S
113.411875 52.075 m
113.411875 52.96204 l
S
523.541875 52.075 m
523.541875 52.96204 l
S
109.226875 52.075 m
109.226875 52.96204 l
S
351.956875 52.075 m
351.956875 52.96204 l
S
343.586875 52.075 m
343.586875 52.96204 l
S
435.656875 52.075 m
435.656875 52.96204 l
S
402.176875 52.075 m
402.176875 52.96204 l
S
184.556875 52.075 m
184.556875 52.96204 l
S
446.816875 52.075 m
446.816875 52.96204 l
S
372.881875 52.075 m
372.881875 52.96204 l
S
593.291875 52.075 m
593.291875 52.96204 l
S
371.486875 52.075 m
371.486875 52.85116 l
S
344.981875 52.075 m
344.981875 52.85116 l
S
204.086875 52.075 m
204.086875 52.85116 l
S
336.611875 52.075 m
336.611875 52.85116 l
S
621.191875 52.075 m
621.191875 52.85116 l
S
547.256875 52.075 m
547.256875 52.85116 l
S
310.106875 52.075 m
310.106875 52.85116 l
S
250.121875 52.075 m
250.121875 52.85116 l
S
407.756875 52.075 m
407.756875 52.85116 l
S
406.361875 52.075 m
406.361875 52.85116 l
S
607.241875 52.075 m
607.241875 52.85116 l
S
374.276875 52.075 m
374.276875 52.85116 l
S
490.061875 52.075 m
490.061875 52.85116 l
S
123.176875 52.075 m
123.176875 52.85116 l
S
236.171875 52.075 m
236.171875 52.85116 l
S
118.991875 52.075 m
118.991875 52.85116 l
S
305.921875 52.075 m
305.921875 52.74028 l
S
400.781875 52.075 m
400.781875 52.74028 l
S
393.806875 52.075 m
393.806875 52.74028 l
S
378.461875 52.075 m
378.461875 52.74028 l
S
516.566875 52.075 m
516.566875 52.74028 l
S
488.666875 52.075 m
488.666875 52.74028 l
S
635.141875 52.075 m
635.141875 52.74028 l
S
364.511875 52.075 m
364.511875 52.74028 l
S
218.036875 52.075 m
218.036875 52.74028 l
S
278.021875 52.075 m
278.021875 52.74028 l
S
649.091875 52.075 m
649.091875 52.74028 l
S
386.831875 52.075 m
386.831875 52.74028 l
S
153.866875 52.075 m
153.866875 52.74028 l
S
416.126875 52.075 m
416.126875 52.74028 l
S
259.886875 52.075 m
259.886875 52.74028 l
S
303.131875 52.075 m
303.131875 52.74028 l
S
121.781875 52.075 m
121.781875 52.74028 l
S
463.556875 52.075 m
463.556875 52.74028 l
S
718.841875 52.075 m
718.841875 52.74028 l
S
656.066875 52.075 m
656.066875 52.6294 l
S
530.516875 52.075 m
530.516875 52.6294 l
S
414.731875 52.075 m
414.731875 52.6294 l
S
477.506875 52.075 m
477.506875 52.6294 l
S
430.076875 52.075 m
430.076875 52.6294 l
S
198.506875 52.075 m
198.506875 52.6294 l
S
459.371875 52.075 m
459.371875 52.6294 l
S
565.391875 52.075 m
565.391875 52.6294 l
S
711.866875 52.075 m
711.866875 52.6294 l
S
319.871875 52.075 m
319.871875 52.6294 l
S
399.386875 52.075 m
399.386875 52.6294 l
S
449.606875 52.075 m
449.606875 52.6294 l
S
169.211875 52.075 m
169.211875 52.6294 l
S
114.806875 52.075 m
114.806875 52.6294 l
S
690.941875 52.075 m
690.941875 52.6294 l
S
212.456875 52.075 m
212.456875 52.6294 l
S
441.236875 52.075 m
441.236875 52.6294 l
S
483.086875 52.075 m
483.086875 52.6294 l
S
728.606875 52.075 m
728.606875 52.51852 l
S
600.266875 52.075 m
600.266875 52.51852 l
S
670.016875 52.075 m
670.016875 52.51852 l
S
333.821875 52.075 m
333.821875 52.51852 l
S
427.286875 52.075 m
427.286875 52.51852 l
S
361.721875 52.075 m
361.721875 52.51852 l
S
851.366875 52.075 m
851.366875 52.51852 l
S
421.706875 52.075 m
421.706875 52.51852 l
S
502.616875 52.075 m
502.616875 52.51852 l
S
194.321875 52.075 m
194.321875 52.51852 l
S
347.771875 52.075 m
347.771875 52.51852 l
S
663.041875 52.075 m
663.041875 52.51852 l
S
432.866875 52.075 m
432.866875 52.51852 l
S
444.026875 52.075 m
444.026875 52.51852 l
S
519.356875 52.075 m
519.356875 52.51852 l
S
879.266875 52.075 m
879.266875 52.51852 l
S
170.606875 52.075 m
170.606875 52.51852 l
S
732.791875 52.075 m
732.791875 52.51852 l
S
385.436875 52.075 m
385.436875 52.51852 l
S
231.986875 52.075 m
231.986875 52.51852 l
S
127.361875 52.075 m
127.361875 52.51852 l
S
586.316875 52.075 m
586.316875 52.51852 l
S
470.531875 52.075 m
470.531875 52.51852 l
S
558.416875 52.075 m
558.416875 52.51852 l
S
190.136875 52.075 m
190.136875 52.40764 l
S
704.891875 52.075 m
704.891875 52.40764 l
S
442.631875 52.075 m
442.631875 52.40764 l
S
455.186875 52.075 m
455.186875 52.40764 l
S
540.281875 52.075 m
540.281875 52.40764 l
S
626.771875 52.075 m
626.771875 52.40764 l
S
628.166875 52.075 m
628.166875 52.40764 l
S
700.706875 52.075 m
700.706875 52.40764 l
S
544.466875 52.075 m
544.466875 52.40764 l
S
208.271875 52.075 m
208.271875 52.40764 l
S
417.521875 52.075 m
417.521875 52.40764 l
S
658.856875 52.075 m
658.856875 52.40764 l
S
142.706875 52.075 m
142.706875 52.40764 l
S
671.411875 52.075 m
671.411875 52.40764 l
S
826.256875 52.075 m
826.256875 52.40764 l
S
134.336875 52.075 m
134.336875 52.40764 l
S
504.011875 52.075 m
504.011875 52.40764 l
S
148.286875 52.075 m
148.286875 52.40764 l
S
667.226875 52.075 m
667.226875 52.40764 l
S
683.966875 52.075 m
683.966875 52.40764 l
S
774.641875 52.075 m
774.641875 52.40764 l
S
389.621875 52.075 m
389.621875 52.40764 l
S
746.741875 52.075 m
746.741875 52.40764 l
S
676.991875 52.075 m
676.991875 52.40764 l
S
420.311875 52.075 m
420.311875 52.40764 l
S
156.656875 52.075 m
156.656875 52.40764 l
S
392.411875 52.075 m
392.411875 52.40764 l
S
106.436875 52.075 m
106.436875 52.40764 l
S
642.116875 52.075 m
642.116875 52.40764 l
S
510.986875 52.075 m
510.986875 52.40764 l
S
128.756875 52.075 m
128.756875 52.40764 l
S
485.876875 52.075 m
485.876875 52.40764 l
S
375.671875 52.075 m
375.671875 52.40764 l
S
756.506875 52.075 m
756.506875 52.29676 l
S
222.221875 52.075 m
222.221875 52.29676 l
S
538.886875 52.075 m
538.886875 52.29676 l
S
448.211875 52.075 m
448.211875 52.29676 l
S
498.431875 52.075 m
498.431875 52.29676 l
S
803.936875 52.075 m
803.936875 52.29676 l
S
806.726875 52.075 m
806.726875 52.29676 l
S
582.131875 52.075 m
582.131875 52.29676 l
S
487.271875 52.075 m
487.271875 52.29676 l
S
672.806875 52.075 m
672.806875 52.29676 l
S
802.541875 52.075 m
802.541875 52.29676 l
S
497.036875 52.075 m
497.036875 52.29676 l
S
462.161875 52.075 m
462.161875 52.29676 l
S
769.061875 52.075 m
769.061875 52.29676 l
S
587.711875 52.075 m
587.711875 52.29676 l
S
889.031875 52.075 m
889.031875 52.29676 l
S
608.636875 52.075 m
608.636875 52.29676 l
S
872.291875 52.075 m
872.291875 52.29676 l
S
434.261875 52.075 m
434.261875 52.29676 l
S
515.171875 52.075 m
515.171875 52.29676 l
S
524.936875 52.075 m
524.936875 52.29676 l
S
615.611875 52.075 m
615.611875 52.29676 l
S
686.756875 52.075 m
686.756875 52.29676 l
S
597.476875 52.075 m
597.476875 52.29676 l
S
596.081875 52.075 m
596.081875 52.29676 l
S
594.686875 52.075 m
594.686875 52.29676 l
S
505.406875 52.075 m
505.406875 52.29676 l
S
529.121875 52.075 m
529.121875 52.29676 l
S
682.571875 52.075 m
682.571875 52.29676 l
S
858.341875 52.075 m
858.341875 52.29676 l
S
798.356875 52.075 m
798.356875 52.29676 l
S
572.366875 52.075 m
572.366875 52.29676 l
S
264.071875 52.075 m
264.071875 52.29676 l
S
679.781875 52.075 m
679.781875 52.29676 l
S
501.221875 52.075 m
501.221875 52.29676 l
S
484.481875 52.075 m
484.481875 52.29676 l
S
788.591875 52.075 m
788.591875 52.29676 l
S
469.136875 52.075 m
469.136875 52.29676 l
S
110.621875 52.075 m
110.621875 52.29676 l
S
699.311875 52.075 m
699.311875 52.29676 l
S
561.206875 52.075 m
561.206875 52.29676 l
S
741.161875 52.075 m
741.161875 52.29676 l
S
830.441875 52.075 m
830.441875 52.29676 l
S
388.226875 52.075 m
388.226875 52.29676 l
S
816.491875 52.075 m
816.491875 52.29676 l
S
739.766875 52.075 m
739.766875 52.29676 l
S
457.976875 52.075 m
457.976875 52.29676 l
S
124.571875 52.075 m
124.571875 52.29676 l
S
724.421875 52.075 m
724.421875 52.29676 l
S
629.561875 52.075 m
629.561875 52.29676 l
S
653.276875 52.075 m
653.276875 52.29676 l
S
794.171875 52.075 m
794.171875 52.18588 l
S
555.626875 52.075 m
555.626875 52.18588 l
S
865.316875 52.075 m
865.316875 52.18588 l
S
526.331875 52.075 m
526.331875 52.18588 l
S
643.511875 52.075 m
643.511875 52.18588 l
S
823.466875 52.075 m
823.466875 52.18588 l
S
776.036875 52.075 m
776.036875 52.18588 l
S
644.906875 52.075 m
644.906875 52.18588 l
S
725.816875 52.075 m
725.816875 52.18588 l
S
685.361875 52.075 m
685.361875 52.18588 l
S
617.006875 52.075 m
617.006875 52.18588 l
S
706.286875 52.075 m
706.286875 52.18588 l
S
795.566875 52.075 m
795.566875 52.18588 l
S
557.021875 52.075 m
557.021875 52.18588 l
S
735.581875 52.075 m
735.581875 52.18588 l
S
866.711875 52.075 m
866.711875 52.18588 l
S
570.971875 52.075 m
570.971875 52.18588 l
S
554.231875 52.075 m
554.231875 52.18588 l
S
820.676875 52.075 m
820.676875 52.18588 l
S
431.471875 52.075 m
431.471875 52.18588 l
S
697.916875 52.075 m
697.916875 52.18588 l
S
640.721875 52.075 m
640.721875 52.18588 l
S
162.236875 52.075 m
162.236875 52.18588 l
S
428.681875 52.075 m
428.681875 52.18588 l
S
784.406875 52.075 m
784.406875 52.18588 l
S
166.421875 52.075 m
166.421875 52.18588 l
S
695.126875 52.075 m
695.126875 52.18588 l
S
552.836875 52.075 m
552.836875 52.18588 l
S
909.956875 52.075 m
909.956875 52.18588 l
S
512.381875 52.075 m
512.381875 52.18588 l
S
781.616875 52.075 m
781.616875 52.18588 l
S
791.381875 52.075 m
791.381875 52.18588 l
S
692.336875 52.075 m
692.336875 52.18588 l
S
603.056875 52.075 m
603.056875 52.18588 l
S
513.776875 52.075 m
513.776875 52.18588 l
S
905.771875 52.075 m
905.771875 52.18588 l
S
614.216875 52.075 m
614.216875 52.18588 l
S
601.661875 52.075 m
601.661875 52.18588 l
S
379.856875 52.075 m
379.856875 52.18588 l
S
792.776875 52.075 m
792.776875 52.18588 l
S
736.976875 52.075 m
736.976875 52.18588 l
S
902.981875 52.075 m
902.981875 52.18588 l
S
654.671875 52.075 m
654.671875 52.18588 l
S
762.086875 52.075 m
762.086875 52.18588 l
S
543.071875 52.075 m
543.071875 52.18588 l
S
742.556875 52.075 m
742.556875 52.18588 l
S
907.166875 52.075 m
907.166875 52.18588 l
S
580.736875 52.075 m
580.736875 52.18588 l
S
893.216875 52.075 m
893.216875 52.18588 l
S
180.371875 52.075 m
180.371875 52.18588 l
S
491.456875 52.075 m
491.456875 52.18588 l
S
809.516875 52.075 m
809.516875 52.18588 l
S
721.631875 52.075 m
721.631875 52.18588 l
S
630.956875 52.075 m
630.956875 52.18588 l
S
541.676875 52.075 m
541.676875 52.18588 l
S
844.391875 52.075 m
844.391875 52.18588 l
S
566.786875 52.075 m
566.786875 52.18588 l
S
753.716875 52.075 m
753.716875 52.18588 l
S
748.136875 52.075 m
748.136875 52.18588 l
S
837.416875 52.075 m
837.416875 52.18588 l
S
752.321875 52.075 m
752.321875 52.18588 l
S
445.421875 52.075 m
445.421875 52.18588 l
S
764.876875 52.075 m
764.876875 52.18588 l
S
707.681875 52.075 m
707.681875 52.18588 l
S
812.306875 52.075 m
812.306875 52.18588 l
S
861.131875 52.075 m
861.131875 52.18588 l
S
859.736875 52.075 m
859.736875 52.18588 l
S
413.336875 52.075 m
413.336875 52.18588 l
S
545.861875 52.075 m
545.861875 52.18588 l
S
456.581875 52.075 m
456.581875 52.18588 l
S
887.636875 52.075 m
887.636875 52.18588 l
S
559.811875 52.075 m
559.811875 52.18588 l
S
471.926875 52.075 m
471.926875 52.18588 l
S
531.911875 52.075 m
531.911875 52.18588 l
S
854.156875 52.075 m
854.156875 52.18588 l
S
767.666875 52.075 m
767.666875 52.18588 l
S
710.471875 52.075 m
710.471875 52.18588 l
S
678.386875 52.075 m
678.386875 52.18588 l
S
650.486875 52.075 m
650.486875 52.18588 l
S
473.321875 52.075 m
473.321875 52.18588 l
S
651.881875 52.075 m
651.881875 52.18588 l
S
533.306875 52.075 m
533.306875 52.18588 l
S
141.311875 52.075 m
141.311875 52.18588 l
S
848.576875 52.075 m
848.576875 52.18588 l
S
Q
q
2 J
0 j
0.8 w
/DeviceRGB {} cs
[0 0 0] sc
75.746875 52.075 m
75.746875 606.475 l
S
912.746875 52.075 m
912.746875 606.475 l
S
75.746875 52.075 m
912.746875 52.075 l
S
75.746875 606.475 m
912.746875 606.475 l
S
0 J
/DeviceGray {} cs
[0] sc
1 j
1 w
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
286.629688 624.240625 Td
/F14_0 24 Tf
(Gunetti DD Latencies Histogram)
[18.6
0
15.216
0
15.216
0
14.76
0
9.408
0
9.408
0
6.672
0
7.632
0
18.48
0
18.48
0
7.632
0
13.368
0
14.712
0
9.408
0
14.76
0
15.216
0
13.2
0
6.672
0
14.76
0
12.504
0
7.632
0
18.048
0
6.672
0
12.504
0
9.408
0
14.688
0
15.24
0
9.864
0
14.712
0
23.376
0] Tj
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font T3_14_0
%%EOF
